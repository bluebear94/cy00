package サークル.流川.朝陽町燃記.マップ

import scala.util.Random

class ワールドパラメター(ランダム: Random) {
  val 種: Long = ランダム.nextLong
  // 65536x65536 / 1024x1024
  val ノードデータ: Array[Array[ノード]] =
    new Array(64 * 64)
  private def チェックインデックス(ここ: 座標) = {
    val 行 = (ここ.行 >> 10) + 32
    val 列 = (ここ.列 >> 10) + 32
    val 残行 = ここ.行 & 1023
    val 残列 = ここ.列 & 1023
    val ここのインデックス = (行 << 6) | 列
    // インデックスは４追加必要で
    // １つのインデックスを
    // １６ビットに保存できるから
    // Longを使える
    var インデックスリスト =
      ここのインデックス | 0xFFFFFFFFFFFF0000L
    var i = 1
    def 追加(インデックス: Int) {
      if (i != 4) {
        // 満員じゃないです
        インデックスリスト <<= 16
        インデックスリスト |= インデックス
        i += 1
      }
    }
    val 左 = 残列 < 256 && 列 != 0
    val 右 = 残列 >= 768 && 列 != 63
    val 上 = 残行 < 256 && 行 != 0
    val 下 = 残行 >= 768 && 行 != 63
    if (左) {
      追加(ここのインデックス - 1)
      if (上) 追加(ここのインデックス - 65)
      else if (下) 追加(ここのインデックス + 63)
    }
    else if (右) {
      追加(ここのインデックス + 1)
      if (上) 追加(ここのインデックス - 63)
      else if (下) 追加(ここのインデックス + 65)
    }
    if (上) 追加(ここのインデックス - 64)
    else if (下) 追加(ここのインデックス + 64)
    インデックスリスト
  }
  def 近くノードあり(ここ: 座標) = {
    
  }
}